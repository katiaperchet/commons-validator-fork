/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:21:07 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.apache.commons.validator.routines.RegexValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegexValidator_ESTest extends RegexValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`~+yz\"[O6";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 8\r
         // `~+yz\"[O6\r
         //         ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Regular expression[";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 18\r
         // Regular expression[\r
         //                   ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("i}7|S|*M%");
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(linkedList0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '*' near index 6\r
         // i}7|S|*M%\r
         //       ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("*o_(l", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '*' near index 0\r
         // *o_(l\r
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("W)f0.Mo)u");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 0\r
         // W)f0.Mo)u\r
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[0];
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("d^L$*9cePC,n$B5UJl");
      RegexValidator regexValidator0 = new RegexValidator(linkedList0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "'5C0+";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "HYO0n=W<=G";
      stringArray0[1] = "HYO0n=W<=G";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String string0 = regexValidator0.validate("HYO0n=W<=G");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("-7n]50mB+", true);
      String string0 = regexValidator0.validate((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("-7n]50mB+", true);
      String string0 = regexValidator0.validate("-7n]50mB+");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "HYO0n=W<=G";
      stringArray0[1] = "HYO0n=W<=G";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String string0 = regexValidator0.toString();
      assertEquals("RegexValidator{HYO0n=W<=G,HYO0n=W<=G}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "HYO0n=W<=G";
      stringArray0[1] = "HYO0n=W<=G";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String[] stringArray1 = regexValidator0.match("HYO0n=W<=G");
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("-7n]50mB+", true);
      String[] stringArray0 = regexValidator0.match((String) null);
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator(",");
      String[] stringArray0 = regexValidator0.match("");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator(",");
      boolean boolean0 = regexValidator0.isValid("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("-7n]50mB+", true);
      boolean boolean0 = regexValidator0.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator(",");
      boolean boolean0 = regexValidator0.isValid(",");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         verifyException("org.apache.commons.validator.routines.RegexValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("-7n]50mB+", true);
      Pattern[] patternArray0 = regexValidator0.getPatterns();
      assertEquals(1, patternArray0.length);
  }
}
