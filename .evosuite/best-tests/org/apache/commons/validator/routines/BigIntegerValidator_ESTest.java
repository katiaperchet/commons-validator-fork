/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 18:00:54 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.BigIntegerValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigIntegerValidator_ESTest extends BigIntegerValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, 0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, (long) 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, 0L, 0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1510));
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, 0L, 97L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1));
      Locale locale0 = Locale.CANADA_FRENCH;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-7", locale0);
      assertEquals((byte) (-7), bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.ROOT;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0", locale0);
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("317", locale0);
      assertEquals((byte)61, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.ITALY;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("Za0aYF", "Za0aYF", locale0);
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("7", (String) null, locale0);
      assertEquals((byte)7, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-2174));
      BigInteger bigInteger0 = bigIntegerValidator0.validate((String) null, "");
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("6", "");
      assertEquals((byte)6, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0");
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("1");
      assertEquals((byte)1, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-46");
      assertEquals((byte) (-46), bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = new Locale("org.apache.commons.validator.routines.AbstractFormatValidator");
      // Undeclared exception!
      try { 
        bigIntegerValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", "org.apache.commons.validator.routines.AbstractFormatValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.AbstractFormatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.validate("x'p+oc<I;7", "x'p+oc<I;7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed pattern \"x'p+oc<I;7\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, 0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.processParsedValue((Object) null, decimalFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-2174));
      // Undeclared exception!
      try { 
        bigIntegerValidator0.minValue((BigInteger) null, (long) (-2174));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.maxValue((BigInteger) null, (long) 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.isInRange((BigInteger) null, 0L, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1510));
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, (-411L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, (long) 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, 0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1510));
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, (-411L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1510));
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, (long) (byte) (-1), (long) (-1510));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, 1133L, 1133L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, 0);
      BigInteger bigInteger0 = bigIntegerValidator0.validate("", "", (Locale) null);
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      BigInteger bigInteger0 = (BigInteger)bigIntegerValidator0.processParsedValue(bigIntegerValidator0.CURRENCY_FORMAT, numberFormat0);
      assertEquals((byte)1, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0", "0");
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = new Locale("org.apache.commons.validator.routines.BigIntegerValidator", "org.apache.commons.validator.routines.BigIntegerValidator");
      // Undeclared exception!
      try { 
        bigIntegerValidator0.processParsedValue(locale0, (Format) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.ITALIAN;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("", locale0);
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("");
      assertNull(bigInteger0);
  }
}
