/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:41:54 GMT 2024
 */

package org.apache.commons.validator.routines.checkdigit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.routines.checkdigit.ISBN10CheckDigit;
import org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit;
import org.apache.commons.validator.routines.checkdigit.VerhoeffCheckDigit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ISBNCheckDigit_ESTest extends ISBNCheckDigit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = (ISBNCheckDigit)ISBNCheckDigit.ISBN_CHECK_DIGIT;
      boolean boolean0 = iSBNCheckDigit0.isValid("Y@`'qX?(Sg>[Kkqjb!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      try { 
        iSBNCheckDigit0.calculate("X");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid ISBN Length = 1
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VerhoeffCheckDigit verhoeffCheckDigit0 = (VerhoeffCheckDigit)VerhoeffCheckDigit.VERHOEFF_CHECK_DIGIT;
      // Undeclared exception!
      try { 
        verhoeffCheckDigit0.isValid((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ISBN10CheckDigit iSBN10CheckDigit0 = (ISBN10CheckDigit)ISBNCheckDigit.ISBN10_CHECK_DIGIT;
      // Undeclared exception!
      try { 
        ((ISBNCheckDigit) iSBN10CheckDigit0).calculate("uP20Wz4uV'v.u5s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      boolean boolean0 = iSBNCheckDigit0.isValid(")90`>G5`\"^2z");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      boolean boolean0 = iSBNCheckDigit0.isValid("#j;_HFXn8;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      boolean boolean0 = iSBNCheckDigit0.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      boolean boolean0 = iSBNCheckDigit0.isValid("UjnQ3::FH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      try { 
        iSBNCheckDigit0.calculate("AcVl7j#x[9 p");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Character[1] = 'A'
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      try { 
        iSBNCheckDigit0.calculate("UjnQ3::FH");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Character[1] = 'U'
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      try { 
        iSBNCheckDigit0.calculate("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ISBN Code is missing
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = (ISBNCheckDigit)ISBNCheckDigit.ISBN_CHECK_DIGIT;
      try { 
        iSBNCheckDigit0.calculate("m;o%!f`)\"u/W6E}=l>");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid ISBN Length = 18
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ISBNCheckDigit iSBNCheckDigit0 = new ISBNCheckDigit();
      try { 
        iSBNCheckDigit0.calculate((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // ISBN Code is missing
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ISBNCheckDigit", e);
      }
  }
}
