/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:54:20 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.routines.ISSNValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ISSNValidator_ESTest extends ISSNValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      // Undeclared exception!
      try { 
        iSSNValidator0.extractFromEAN13("r h>lwLR:@*m$*5<Ua");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid length 18 for 'r h>lwLR:@*m$*5<Ua'
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      // Undeclared exception!
      try { 
        iSSNValidator0.extractFromEAN13("' - ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid length 3 for '' -'
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ISSNValidator iSSNValidator0 = ISSNValidator.getInstance();
      // Undeclared exception!
      try { 
        iSSNValidator0.convertToEAN13("", "dd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Suffix must be two digits: 'dd'
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      // Undeclared exception!
      try { 
        iSSNValidator0.extractFromEAN13((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      Object object0 = iSSNValidator0.validate("r h>lwLR:@*m$*5<Ua");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ISSNValidator iSSNValidator0 = ISSNValidator.getInstance();
      // Undeclared exception!
      try { 
        iSSNValidator0.extractFromEAN13(":7?S.iBAPS>;~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix must be 977 to contain an ISSN: ':7?S.iBAPS>;~'
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      // Undeclared exception!
      try { 
        iSSNValidator0.convertToEAN13((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Suffix must be two digits: 'null'
         //
         verifyException("org.apache.commons.validator.routines.ISSNValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      Object object0 = iSSNValidator0.validateEan("00");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ISSNValidator iSSNValidator0 = new ISSNValidator();
      boolean boolean0 = iSSNValidator0.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ISSNValidator iSSNValidator0 = ISSNValidator.getInstance();
      String string0 = iSSNValidator0.convertToEAN13("4;>3,", "77");
      assertNull(string0);
  }
}
