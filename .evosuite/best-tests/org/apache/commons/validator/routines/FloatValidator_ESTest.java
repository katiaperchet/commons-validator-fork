/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:35:18 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.FloatValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FloatValidator_ESTest extends FloatValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      Float float0 = new Float(1.401298464324817E-45);
      Object object0 = floatValidator0.processParsedValue(float0, dateFormat0);
      assertNotNull(object0);
      assertEquals(1.4E-45F, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      boolean boolean0 = floatValidator0.maxValue((-1831.4922F), (-1831.4922F));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.ITALIAN;
      Float float0 = floatValidator0.validate("", locale0);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("0", (Locale) null);
      assertNotNull(float0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, 2146311755);
      Locale locale0 = Locale.forLanguageTag("PHulyd2A/\"Zr2s");
      Float float0 = floatValidator0.validate("-1", locale0);
      assertNotNull(float0);
      assertEquals((-1.0F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("j0j_e!", "j0j_e!", (Locale) null);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.US;
      Float float0 = floatValidator0.validate("7", (String) null, locale0);
      assertNotNull(float0);
      assertEquals(7.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.UK;
      Float float0 = floatValidator0.validate("-877.31", (String) null, locale0);
      assertNotNull(float0);
      assertEquals((-877.31F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 133);
      Float float0 = floatValidator0.validate("d`zizf0qR1", "d`zizf0qR1");
      assertNotNull(float0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("7", "");
      assertEquals(7.0F, (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 1879048192);
      Float float0 = floatValidator0.validate("nm,9wr0", "nm,9wr0");
      assertNotNull(float0);
      assertEquals((-9.0F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("0");
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("-0.014");
      assertNotNull(float0);
      assertEquals((-0.014F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("7");
      assertEquals(7.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, 2146311755);
      Float float0 = floatValidator0.validate("-1");
      assertEquals((-1.0F), (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = new Float((double) 0);
      boolean boolean0 = floatValidator0.minValue(float0, 1.0F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = new Float((-1.0));
      boolean boolean0 = floatValidator0.maxValue(float0, (-835.5F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Locale locale0 = Locale.TAIWAN;
      // Undeclared exception!
      try { 
        floatValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", "org.apache.commons.validator.routines.AbstractFormatValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.AbstractFormatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, (-668));
      // Undeclared exception!
      try { 
        floatValidator0.validate("\"6994i", "TGNI,Ob>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed pattern \"TGNI,Ob>\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.GERMANY;
      MessageFormat messageFormat0 = new MessageFormat("", locale0);
      // Undeclared exception!
      try { 
        floatValidator0.processParsedValue((Object) null, messageFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, (-199));
      Locale locale0 = Locale.GERMANY;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      // Undeclared exception!
      try { 
        floatValidator0.processParsedValue(locale0, numberFormat0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      // Undeclared exception!
      try { 
        floatValidator0.minValue((Float) null, (-1366.3994F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      // Undeclared exception!
      try { 
        floatValidator0.maxValue((Float) null, (-2430.8F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      boolean boolean0 = floatValidator0.minValue(0.0F, 0.0F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      boolean boolean0 = floatValidator0.maxValue((-1831.4922F), 1.0F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      boolean boolean0 = floatValidator0.isInRange(0.0F, 0.0F, (-1440.6027F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.isInRange(1.0F, 1.0F, 1994.6368F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      boolean boolean0 = floatValidator0.minValue(0.0F, (float) 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, 0);
      boolean boolean0 = floatValidator0.maxValue((-180.0226F), (-3281.397F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, (-199));
      Float float0 = new Float(1.0F);
      boolean boolean0 = floatValidator0.isInRange(float0, (-1.0F), (float) (-199));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      boolean boolean0 = floatValidator0.isInRange((-1366.3994F), (float) 2254, (float) 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, 435);
      // Undeclared exception!
      try { 
        floatValidator0.isInRange((Float) null, (-240.25F), 931.1F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      Float float0 = floatValidator0.validate("X");
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = new Float((double) 0);
      boolean boolean0 = floatValidator0.isInRange(float0, (-1.0F), 0.0F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      Float float0 = new Float((float) 1);
      boolean boolean0 = floatValidator0.maxValue(float0, (float) 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("7", "7");
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 2254);
      Locale locale0 = Locale.KOREAN;
      Float float0 = floatValidator0.validate("org.apache.commons.validator.routines.FloatValidator", "X", locale0);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.ROOT;
      Float float0 = floatValidator0.validate("7", locale0);
      assertNotNull(float0);
      
      boolean boolean0 = floatValidator0.minValue(float0, (float) 0);
      assertTrue(boolean0);
  }
}
