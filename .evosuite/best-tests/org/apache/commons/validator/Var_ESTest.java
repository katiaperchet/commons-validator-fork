/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 18:08:07 GMT 2024
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.validator.Var;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Var_ESTest extends Var_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Var var0 = new Var();
      var0.setResource(true);
      boolean boolean0 = var0.isResource();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Var var0 = new Var();
      var0.setValue("Var: name=null  value=null  resource=false  jsType=null\n");
      String string0 = var0.getValue();
      assertEquals("Var: name=null  value=null  resource=false  jsType=null\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Var var0 = new Var((String) null, "", "WHHh@^1");
      String string0 = var0.getValue();
      assertNotNull(string0);
      assertEquals("WHHh@^1", var0.getJsType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Var var0 = new Var("]og&!f7kj62", "i`PLK{@E$sA*>k&8nI*", "]og&!f7kj62");
      String string0 = var0.getName();
      assertEquals("]og&!f7kj62", string0);
      assertEquals("]og&!f7kj62", var0.getJsType());
      assertEquals("i`PLK{@E$sA*>k&8nI*", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Var var0 = new Var("RU)BD>BH%", "", "");
      String string0 = var0.getJsType();
      assertEquals("", string0);
      assertEquals("RU)BD>BH%", var0.getName());
      assertEquals("", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Var var0 = new Var("]og&!f7kj62", "i`PLK{@E$sA*>k&8nI*", "]og&!f7kj62");
      var0.setBundle(",B|)Er29v+=");
      String string0 = var0.getBundle();
      assertEquals("]og&!f7kj62", var0.getJsType());
      assertEquals("i`PLK{@E$sA*>k&8nI*", var0.getValue());
      assertEquals("]og&!f7kj62", var0.getName());
      assertEquals(",B|)Er29v+=", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Var var0 = new Var("RU)BD>BH%", "", "");
      var0.setBundle("");
      String string0 = var0.getBundle();
      assertEquals("", var0.getJsType());
      assertEquals("RU)BD>BH%", var0.getName());
      assertEquals("", var0.getValue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.toString();
      assertEquals("Var: name=null  value=null  resource=false  jsType=null\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Var var0 = new Var();
      Object object0 = var0.clone();
      assertNotSame(var0, object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Var var0 = new Var("", "", "");
      String string0 = var0.getName();
      assertEquals("", string0);
      assertEquals("", var0.getJsType());
      assertEquals("", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Var var0 = new Var();
      var0.setName("regexp");
      assertEquals("regexp", var0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getJsType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Var var0 = new Var();
      boolean boolean0 = var0.isResource();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getBundle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Var var0 = new Var("", "", "");
      var0.setResource(true);
      var0.toString();
      assertTrue(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Var var0 = new Var();
      var0.setJsType("string");
      String string0 = var0.getJsType();
      assertEquals("string", string0);
  }
}
