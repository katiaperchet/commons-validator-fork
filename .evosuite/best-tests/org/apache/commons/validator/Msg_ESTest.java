/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 18:13:59 GMT 2024
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.validator.Msg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Msg_ESTest extends Msg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setName("- srourc=");
      String string0 = msg0.toString();
      assertEquals("Msg: name=- srourc=  key=null  resource=true  bundle=null\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setBundle("- srourc=");
      String string0 = msg0.toString();
      assertEquals("Msg: name=null  key=null  resource=true  bundle=- srourc=\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Msg msg0 = new Msg();
      assertTrue(msg0.isResource());
      
      msg0.setResource(false);
      boolean boolean0 = msg0.isResource();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setName("");
      String string0 = msg0.getName();
      assertTrue(msg0.isResource());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setKey("\"0)FSH^*/-Ufj");
      String string0 = msg0.getKey();
      assertNotNull(string0);
      assertTrue(msg0.isResource());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setKey("");
      String string0 = msg0.getKey();
      assertTrue(msg0.isResource());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setBundle("");
      String string0 = msg0.getBundle();
      assertTrue(msg0.isResource());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setName("- srourc=");
      String string0 = msg0.getName();
      assertTrue(msg0.isResource());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Msg msg0 = new Msg();
      Msg msg1 = (Msg)msg0.clone();
      assertTrue(msg1.isResource());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Msg msg0 = new Msg();
      boolean boolean0 = msg0.isResource();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.getKey();
      assertTrue(msg0.isResource());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.getName();
      assertTrue(msg0.isResource());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.getBundle();
      assertTrue(msg0.isResource());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Msg msg0 = new Msg();
      msg0.setBundle("- srourc=");
      String string0 = msg0.getBundle();
      assertNotNull(string0);
      assertTrue(msg0.isResource());
  }
}
