/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:45:20 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.BigDecimalValidator;
import org.apache.commons.validator.routines.PercentValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PercentValidator_ESTest extends PercentValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = new Locale("org.apache.commons.validator.routines.AbstractNumberValidator", "%ap)oP^~v@fP-~r5", "%ap)oP^~v@fP-~r5");
      BigDecimalValidator bigDecimalValidator0 = PercentValidator.getInstance();
      BigDecimal bigDecimal0 = bigDecimalValidator0.validate("org.apache.commons.validator.routines.AbstractNumberValidator", "%ap)oP^~v@fP-~r5", locale0);
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      // Undeclared exception!
      try { 
        percentValidator0.parse("0.01", decimalFormat0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      Locale locale0 = Locale.CANADA_FRENCH;
      DecimalFormat decimalFormat0 = (DecimalFormat)percentValidator0.getFormat(locale0);
      percentValidator0.parse("org.apache.commons.validator.routines.AbstractNumberValidator", decimalFormat0);
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals(" ", decimalFormat0.getPositiveSuffix());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      DecimalFormat decimalFormat0 = (DecimalFormat)percentValidator0.getFormat((Locale) null);
      percentValidator0.parse("3+2lG\"}Ry_", decimalFormat0);
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositiveSuffix());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      Object object0 = percentValidator0.parse("z}T", decimalFormat0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)DateFormat.getInstance();
      Object object0 = percentValidator0.parse("z}T", simpleDateFormat0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      Locale locale0 = Locale.CANADA_FRENCH;
      Format format0 = percentValidator0.getFormat("0PrxS<py]Oy?N", locale0);
      BigDecimal bigDecimal0 = (BigDecimal)percentValidator0.parse("0PrxS<py]Oy?N", format0);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator();
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      // Undeclared exception!
      try { 
        percentValidator0.parse((String) null, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      // Undeclared exception!
      percentValidator0.parse("", decimalFormat0);
  }
}
