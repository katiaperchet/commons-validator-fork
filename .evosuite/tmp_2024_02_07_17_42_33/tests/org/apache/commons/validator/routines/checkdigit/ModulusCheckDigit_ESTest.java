/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:31:34 GMT 2024
 */

package org.apache.commons.validator.routines.checkdigit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit;
import org.apache.commons.validator.routines.checkdigit.ISBN10CheckDigit;
import org.apache.commons.validator.routines.checkdigit.ISINCheckDigit;
import org.apache.commons.validator.routines.checkdigit.ISSNCheckDigit;
import org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit;
import org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit;
import org.apache.commons.validator.routines.checkdigit.ModulusTenCheckDigit;
import org.apache.commons.validator.routines.checkdigit.SedolCheckDigit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModulusCheckDigit_ESTest extends ModulusCheckDigit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      assertEquals(10, sedolCheckDigit0.getModulus());
      assertNotNull(sedolCheckDigit0);
      
      String string0 = sedolCheckDigit0.toCheckDigit(0);
      assertEquals("0", string0);
      assertEquals(10, sedolCheckDigit0.getModulus());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[26];
      intArray0[0] = (-706);
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0);
      assertEquals(26, intArray0.length);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertNotNull(modulusTenCheckDigit0);
      
      boolean boolean0 = modulusTenCheckDigit0.isValid("2");
      assertEquals(26, intArray0.length);
      assertFalse(boolean0);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = new ISSNCheckDigit();
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(iSSNCheckDigit0);
      
      int int0 = iSSNCheckDigit0.getModulus();
      assertEquals(11, int0);
      assertEquals(11, iSSNCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = (ISSNCheckDigit)ISSNCheckDigit.ISSN_CHECK_DIGIT;
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(iSSNCheckDigit0);
      
      String string0 = iSSNCheckDigit0.calculate("6");
      assertEquals("7", string0);
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CUSIPCheckDigit cUSIPCheckDigit0 = (CUSIPCheckDigit)CUSIPCheckDigit.CUSIP_CHECK_DIGIT;
      assertEquals(10, cUSIPCheckDigit0.getModulus());
      assertNotNull(cUSIPCheckDigit0);
      
      int int0 = cUSIPCheckDigit0.weightedValue((-1699), 0, 9);
      assertEquals(0, int0);
      assertEquals(10, cUSIPCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = (ISSNCheckDigit)ISSNCheckDigit.ISSN_CHECK_DIGIT;
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(iSSNCheckDigit0);
      
      boolean boolean0 = iSSNCheckDigit0.isValid(", useRightPos=");
      assertFalse(boolean0);
      assertEquals(11, iSSNCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = (ISSNCheckDigit)ISSNCheckDigit.ISSN_CHECK_DIGIT;
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(iSSNCheckDigit0);
      
      int int0 = iSSNCheckDigit0.toInt('0', 259, 65);
      assertEquals(0, int0);
      assertEquals(11, iSSNCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CUSIPCheckDigit cUSIPCheckDigit0 = new CUSIPCheckDigit();
      assertEquals(10, cUSIPCheckDigit0.getModulus());
      assertNotNull(cUSIPCheckDigit0);
      
      int int0 = cUSIPCheckDigit0.toInt('A', 75, 0);
      assertEquals(10, int0);
      assertEquals(10, cUSIPCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      assertEquals(10, iSINCheckDigit0.getModulus());
      assertNotNull(iSINCheckDigit0);
      
      String string0 = iSINCheckDigit0.toCheckDigit(9);
      assertEquals("9", string0);
      assertEquals(10, iSINCheckDigit0.getModulus());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = ModulusCheckDigit.sumDigits(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[26];
      intArray0[0] = (-706);
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0);
      assertEquals(26, intArray0.length);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertNotNull(modulusTenCheckDigit0);
      
      int int0 = modulusTenCheckDigit0.calculateModulus("5", false);
      assertEquals(26, intArray0.length);
      assertEquals(0, int0);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = (ISSNCheckDigit)ISSNCheckDigit.ISSN_CHECK_DIGIT;
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertNotNull(iSSNCheckDigit0);
      
      int int0 = iSSNCheckDigit0.calculateModulus("5", true);
      assertEquals(7, int0);
      assertEquals(11, iSSNCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = (-2393);
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0, true);
      assertEquals(6, intArray0.length);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertArrayEquals(new int[] {0, 0, (-2393), 0, 0, 0}, intArray0);
      assertNotNull(modulusTenCheckDigit0);
      
      int int0 = modulusTenCheckDigit0.calculateModulus("k9V9", false);
      assertEquals(6, intArray0.length);
      assertEquals((-3), int0);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertArrayEquals(new int[] {0, 0, (-2393), 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      assertEquals(10, iSINCheckDigit0.getModulus());
      assertNotNull(iSINCheckDigit0);
      
      // Undeclared exception!
      try { 
        iSINCheckDigit0.calculateModulus("", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ISBN10CheckDigit iSBN10CheckDigit0 = new ISBN10CheckDigit();
      assertEquals(11, iSBN10CheckDigit0.getModulus());
      assertNotNull(iSBN10CheckDigit0);
      
      // Undeclared exception!
      try { 
        iSBN10CheckDigit0.calculateModulus((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[0];
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0);
      assertEquals(0, intArray0.length);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertArrayEquals(new int[] {}, intArray0);
      assertNotNull(modulusTenCheckDigit0);
      
      // Undeclared exception!
      try { 
        modulusTenCheckDigit0.calculateModulus("ModulusTenCheckDigit[postitionWeight=[], useRightPos=false, sumWeightedDigits=false]", false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusTenCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[0];
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0);
      assertEquals(0, intArray0.length);
      assertEquals(10, modulusTenCheckDigit0.getModulus());
      assertArrayEquals(new int[] {}, intArray0);
      assertNotNull(modulusTenCheckDigit0);
      
      // Undeclared exception!
      try { 
        modulusTenCheckDigit0.calculate("0");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusTenCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      assertEquals(10, iSINCheckDigit0.getModulus());
      assertNotNull(iSINCheckDigit0);
      
      boolean boolean0 = iSINCheckDigit0.isValid("zINjtJi7aKE0");
      assertTrue(boolean0);
      assertEquals(10, iSINCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = ModulusCheckDigit.sumDigits(12);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      try { 
        iSINCheckDigit0.toInt('r', 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Character[1] = 'r'
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CUSIPCheckDigit cUSIPCheckDigit0 = new CUSIPCheckDigit();
      try { 
        cUSIPCheckDigit0.toCheckDigit(35);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Check Digit Value =35
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      try { 
        sedolCheckDigit0.toCheckDigit((-70));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Check Digit Value =-70
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = new ISSNCheckDigit();
      boolean boolean0 = iSSNCheckDigit0.isValid("");
      assertEquals(11, iSSNCheckDigit0.getModulus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      boolean boolean0 = iSINCheckDigit0.isValid((String) null);
      assertEquals(10, iSINCheckDigit0.getModulus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ISSNCheckDigit iSSNCheckDigit0 = (ISSNCheckDigit)ISSNCheckDigit.ISSN_CHECK_DIGIT;
      try { 
        iSSNCheckDigit0.calculateModulus("00", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid code, sum is zero
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LuhnCheckDigit luhnCheckDigit0 = new LuhnCheckDigit();
      boolean boolean0 = luhnCheckDigit0.isValid("5");
      assertEquals(10, luhnCheckDigit0.getModulus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      try { 
        iSINCheckDigit0.calculate("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Code is missing
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LuhnCheckDigit luhnCheckDigit0 = new LuhnCheckDigit();
      String string0 = luhnCheckDigit0.calculate("5");
      assertEquals("9", string0);
      assertEquals(10, luhnCheckDigit0.getModulus());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ISINCheckDigit iSINCheckDigit0 = new ISINCheckDigit();
      try { 
        iSINCheckDigit0.calculate((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Code is missing
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[26];
      ModulusTenCheckDigit modulusTenCheckDigit0 = new ModulusTenCheckDigit(intArray0);
      int int0 = modulusTenCheckDigit0.getModulus();
      assertEquals(10, int0);
  }
}
