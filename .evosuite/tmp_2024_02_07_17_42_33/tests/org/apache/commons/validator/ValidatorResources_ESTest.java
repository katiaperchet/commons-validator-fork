/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:00:02 GMT 2024
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URL;
import java.util.Locale;
import java.util.Map;
import org.apache.commons.collections.FastHashMap;
import org.apache.commons.validator.Form;
import org.apache.commons.validator.FormSet;
import org.apache.commons.validator.ValidatorAction;
import org.apache.commons.validator.ValidatorResources;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValidatorResources_ESTest extends ValidatorResources_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("uendPrefixMapping(");
      validatorResources0.addFormSet(formSet0);
      // Undeclared exception!
      try { 
        validatorResources0.getForm("uendPrefixMapping(", "", "", "&_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hFormSets = null;
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("M{CjI)");
      validatorResources0.addFormSet(formSet0);
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.addFormSet(formSet0);
      FormSet formSet1 = validatorResources0.getFormSet("", "", "");
      assertSame(formSet1, formSet0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.addFormSet(formSet0);
      Form form0 = validatorResources0.getForm(ValidatorResources.defaultLocale, "$");
      assertNull(form0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      Locale locale0 = Locale.GERMAN;
      validatorResources0.process();
      Form form1 = validatorResources0.getForm(locale0, (String) null);
      assertTrue(form1.isProcessed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setExtends("FormSet: language=null  country=null  variant=null\n");
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      Locale locale0 = Locale.GERMAN;
      Form form1 = validatorResources0.getForm(locale0, (String) null);
      assertNull(form1.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      Map<String, ValidatorAction> map0 = validatorResources0.getActions();
      FastHashMap fastHashMap0 = new FastHashMap(map0);
      formSet0.process(fastHashMap0);
      Form form1 = validatorResources0.getForm("EMv@97J@;iq%", "", "FormSet: language=null  country=null  variant=null\n   Form: null\n\n", (String) null);
      assertFalse(form1.isExtending());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setExtends("FormSet: language=null  country=null  variant=null\n");
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      Form form1 = validatorResources0.getForm("EMv@97J@;iq%", "default", "FormSet: language=null  country=null  variant=null\n   Form: null\n\n", (String) null);
      assertSame(form1, form0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, String> map0 = validatorResources0.getConstants();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.addConstant("/$F[l.*4x|,u.k43", "DUigester.gtParser: ");
      Map<String, String> map0 = validatorResources0.getConstants();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Form form0 = new Form();
      FastHashMap fastHashMap0 = validatorResources0.hActions;
      form0.validate(fastHashMap0, fastHashMap0, 1179);
      Map<String, ValidatorAction> map0 = validatorResources0.getActions();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("default");
      String string0 = validatorResources0.buildKey(formSet0);
      assertEquals("_default", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      String string0 = validatorResources0.buildKey(formSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hConstants = null;
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("5,s=,gt8l jO{_+aa=");
      validatorResources0.addFormSet(formSet0);
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // When country is specified, language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      // Undeclared exception!
      try { 
        validatorResources0.getValidatorActions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      // Undeclared exception!
      try { 
        validatorResources0.getValidatorAction((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.addValidatorAction((ValidatorAction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.addFormSet((FormSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hConstants = null;
      // Undeclared exception!
      try { 
        validatorResources0.addConstant("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources((URL[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[3];
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InputStream[] inputStreamArray0 = new InputStream[0];
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(inputStreamArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.getForm("", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.addFormSet(formSet0);
      formSet0.setLanguage("uendPrefixMapping(");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      formSet0.setLanguage("M{CjI)");
      formSet0.setCountry("5,s=,gt8l jO{_+aa=");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      formSet0.setCountry("$");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("M{CjI)");
      formSet0.setCountry("5,s=,gt8l jO{_+aa=");
      formSet0.setVariant("M{CjI)");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      formSet0.setLanguage("uendPrefixMapping(");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = validatorResources0.getFormSet("/", "", "");
      assertNull(formSet0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Locale locale0 = Locale.forLanguageTag("q3{{=_7>|p?2");
      // Undeclared exception!
      try { 
        validatorResources0.getForm(locale0, "@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("$");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.addFormSet(formSet0);
      assertNull(formSet0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.addFormSet(formSet0);
      Form form0 = validatorResources0.getForm("uendPrefixMapping(", "", "", "");
      assertNull(form0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(uRL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources("/;l5nK");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(pipedInputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = validatorResources0.getValidatorAction("");
      assertNull(validatorAction0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = validatorResources0.getFormSet("", "", "");
      // Undeclared exception!
      try { 
        validatorResources0.buildKey(formSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, ValidatorAction> map0 = validatorResources0.getValidatorActions();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.process();
      FormSet formSet0 = validatorResources0.getFormSet("", "", "");
      assertTrue(formSet0.isProcessed());
  }
}
