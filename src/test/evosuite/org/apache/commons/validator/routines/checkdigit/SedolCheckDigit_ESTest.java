/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 18:01:50 GMT 2024
 */

package org.apache.commons.validator.routines.checkdigit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.routines.checkdigit.SedolCheckDigit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SedolCheckDigit_ESTest extends SedolCheckDigit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      int int0 = sedolCheckDigit0.toInt('Z', 79, 79);
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      try { 
        sedolCheckDigit0.calculateModulus("9 mRhB", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Character[2,6] = '-1' out of range 0 to 35
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.weightedValue(0, 4, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      int int0 = sedolCheckDigit0.weightedValue(1121, 5, 5);
      assertEquals(3363, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.weightedValue((-1), 2, (-1759));
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.toInt('0', 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.calculateModulus("A", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.calculateModulus("V", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      // Undeclared exception!
      try { 
        sedolCheckDigit0.weightedValue(0, 1377, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1376
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      // Undeclared exception!
      try { 
        sedolCheckDigit0.calculateModulus((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      try { 
        sedolCheckDigit0.toInt('V', 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Character[1,1] = '31' out of range 0 to 9
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      try { 
        sedolCheckDigit0.calculateModulus("' out of range 0 to ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid Code Length = 20
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }
}
