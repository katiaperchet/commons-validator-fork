/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 18:03:53 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.Format;
import java.text.MessageFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.BigIntegerValidator;
import org.apache.commons.validator.routines.ByteValidator;
import org.apache.commons.validator.routines.CalendarValidator;
import org.apache.commons.validator.routines.CurrencyValidator;
import org.apache.commons.validator.routines.DateValidator;
import org.apache.commons.validator.routines.DoubleValidator;
import org.apache.commons.validator.routines.FloatValidator;
import org.apache.commons.validator.routines.IntegerValidator;
import org.apache.commons.validator.routines.LongValidator;
import org.apache.commons.validator.routines.PercentValidator;
import org.apache.commons.validator.routines.ShortValidator;
import org.apache.commons.validator.routines.TimeValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractFormatValidator_ESTest extends AbstractFormatValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateValidator dateValidator0 = DateValidator.getInstance();
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      dateValidator0.parse("", decimalFormat0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      double[] doubleArray0 = new double[6];
      String[] stringArray0 = new String[6];
      stringArray0[0] = "6";
      ChoiceFormat choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
      Object object0 = floatValidator0.parse("6", choiceFormat0);
      assertEquals(0.0F, object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntegerValidator integerValidator0 = IntegerValidator.getInstance();
      Locale locale0 = Locale.JAPANESE;
      boolean boolean0 = integerValidator0.isValid("0", locale0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongValidator longValidator0 = new LongValidator(false, 1);
      Locale locale0 = Locale.PRC;
      longValidator0.isValid(",1>n9W<", "", locale0);
      assertFalse(longValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntegerValidator integerValidator0 = IntegerValidator.getInstance();
      boolean boolean0 = integerValidator0.isValid("0", "0");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateValidator dateValidator0 = new DateValidator(true, 0);
      dateValidator0.isValid((String) null, "org.apache.commons.validator.routines.AbstractFormatValidator");
      assertTrue(dateValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      boolean boolean0 = percentValidator0.isValid("4u~T~s");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntegerValidator integerValidator0 = new IntegerValidator(true, (-1556));
      integerValidator0.isValid("");
      assertTrue(integerValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      boolean boolean0 = floatValidator0.isStrict();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimeValidator timeValidator0 = TimeValidator.getInstance();
      Locale locale0 = Locale.UK;
      String string0 = timeValidator0.format((Object) null, locale0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 3063);
      Locale locale0 = Locale.CANADA;
      Float float0 = floatValidator0.validate("0.01", locale0);
      assertNotNull(float0);
      
      floatValidator0.format((Object) float0, locale0);
      assertFalse(floatValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateValidator dateValidator0 = new DateValidator();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      dateValidator0.format((Object) null, (Format) dateFormat0);
      assertTrue(dateValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 374);
      Short short0 = new Short((short)0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      shortValidator0.format((Object) short0, (Format) decimalFormat0);
      assertFalse(shortValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeValidator timeValidator0 = new TimeValidator(false, 868);
      timeValidator0.format((Object) null, ":S");
      assertFalse(timeValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      floatValidator0.format((Object) floatValidator0.STANDARD_FORMAT, "");
      assertTrue(floatValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TimeValidator timeValidator0 = new TimeValidator();
      timeValidator0.format((Object) null);
      assertTrue(timeValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DateValidator dateValidator0 = new DateValidator(true, 0);
      Integer integer0 = new Integer(0);
      dateValidator0.format((Object) integer0);
      assertTrue(dateValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CalendarValidator calendarValidator0 = new CalendarValidator(true, 0);
      // Undeclared exception!
      try { 
        calendarValidator0.parse("Invalid field: ", (Format) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.AbstractFormatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CalendarValidator calendarValidator0 = new CalendarValidator(true, 6);
      Locale locale0 = new Locale("", "~v8^ZO\u0007y w", "ZM=kRJ-%U3-M");
      // Undeclared exception!
      try { 
        calendarValidator0.isValid("~v8^ZO\u0007y w", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 6
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DateValidator dateValidator0 = DateValidator.getInstance();
      Locale locale0 = Locale.PRC;
      // Undeclared exception!
      try { 
        dateValidator0.isValid("^D~!E+NP7j0g+GO", "^D~!E+NP7j0g+GO", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'N'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteValidator byteValidator0 = new ByteValidator(false, 3522);
      // Undeclared exception!
      try { 
        byteValidator0.format((Object) "", (Format) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.AbstractFormatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      // Undeclared exception!
      try { 
        floatValidator0.format((Object) locale0, (Format) decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LongValidator longValidator0 = new LongValidator();
      MessageFormat messageFormat0 = new MessageFormat("5_Vp=aS]V-yT8w4UL");
      // Undeclared exception!
      try { 
        longValidator0.format((Object) "", (Format) messageFormat0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LongValidator longValidator0 = new LongValidator(false, (-1));
      FloatValidator floatValidator0 = new FloatValidator(false, 0);
      ChoiceFormat choiceFormat0 = new ChoiceFormat("&fh=z$.J6Mg%");
      // Undeclared exception!
      try { 
        longValidator0.format((Object) floatValidator0.CURRENCY_FORMAT, (Format) choiceFormat0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        doubleValidator0.format((Object) null, "org.apache.commons.validator.routines.AbstractFormatValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.AbstractFormatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.FRENCH;
      MessageFormat messageFormat0 = new MessageFormat("", locale0);
      String string0 = bigIntegerValidator0.format((Object) null, (Format) messageFormat0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      ByteValidator byteValidator0 = new ByteValidator(false, 0);
      Locale locale0 = Locale.ITALIAN;
      byteValidator0.format((Object) bigIntegerValidator0.PERCENT_FORMAT, "t(/5hk\"o9h-rq ", locale0);
      assertFalse(byteValidator0.isStrict());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DateValidator dateValidator0 = new DateValidator(false, (-3221));
      boolean boolean0 = dateValidator0.isStrict();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0.01");
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.JAPANESE;
      // Undeclared exception!
      try { 
        bigIntegerValidator0.format((Object) null, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(true, 0);
      // Undeclared exception!
      try { 
        doubleValidator0.format((Object) "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntegerValidator integerValidator0 = IntegerValidator.getInstance();
      Locale locale0 = Locale.PRC;
      boolean boolean0 = integerValidator0.isValid("o3(", locale0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        doubleValidator0.format((Object) locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CurrencyValidator currencyValidator0 = new CurrencyValidator();
      // Undeclared exception!
      try { 
        currencyValidator0.isValid("0.01");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IntegerValidator integerValidator0 = IntegerValidator.getInstance();
      // Undeclared exception!
      try { 
        integerValidator0.isValid("0", "&d;q|MJ8%HogY4\"fi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unquoted special character ';' in pattern \"&d;q|MJ8%HogY4\"fi\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
}
