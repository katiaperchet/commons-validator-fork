/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 07 17:50:28 GMT 2024
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.DateFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.ShortValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShortValidator_ESTest extends ShortValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.maxValue((short)0, (short)2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.isInRange((short)0, (short)0, (short)3944);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Locale locale0 = Locale.ENGLISH;
      Short short0 = shortValidator0.validate("0", locale0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 1659);
      Locale locale0 = Locale.FRENCH;
      Short short0 = shortValidator0.validate("4HQVKB.", locale0);
      assertNotNull(short0);
      assertEquals((short)4, (short)short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, (-637));
      Locale locale0 = Locale.forLanguageTag("mJh&ue/_X>30");
      Short short0 = shortValidator0.validate("-1,332", locale0);
      assertEquals((short) (-1332), (short)short0);
      assertNotNull(short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, (-637));
      Locale locale0 = Locale.forLanguageTag("mJh&ue/_X>30");
      Short short0 = shortValidator0.validate("KX<0", "KX<0", locale0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 26);
      Locale locale0 = Locale.CANADA_FRENCH;
      Short short0 = shortValidator0.validate("9r!g%N~n:d<s", "", locale0);
      assertEquals((short)9, (short)short0);
      assertNotNull(short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 3317);
      Short short0 = shortValidator0.validate("-3,977", "0", (Locale) null);
      assertNotNull(short0);
      assertEquals((short) (-3), (short)short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 3317);
      Short short0 = shortValidator0.validate("-3,977", "");
      assertNotNull(short0);
      assertEquals((short) (-3977), (short)short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Short short0 = shortValidator0.validate("0", "");
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 2093);
      Short short0 = shortValidator0.validate("8>9$y|re IlNp\"$BrbC", (String) null);
      assertNotNull(short0);
      assertEquals((short)8, (short)short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 3317);
      Short short0 = shortValidator0.validate("-3,977");
      assertNotNull(short0);
      assertEquals((short) (-3977), (short)short0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(true, 0);
      Short short0 = shortValidator0.validate("0");
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 1659);
      Short short0 = shortValidator0.validate("4HQVKB.");
      assertEquals((short)4, (short)short0);
      assertNotNull(short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, (-687));
      Short short0 = shortValidator0.validate("461");
      assertEquals((short)461, (short)short0);
      assertNotNull(short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(true, 0);
      Short short0 = new Short((short) (-3691));
      boolean boolean0 = shortValidator0.minValue(short0, (short)1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      Short short0 = new Short((short)0);
      boolean boolean0 = shortValidator0.maxValue(short0, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, (-223));
      Locale locale0 = Locale.JAPANESE;
      // Undeclared exception!
      try { 
        shortValidator0.validate("org.apache.commons.validator.routines.ShortValidator", "org.apache.commons.validator.routines.ShortValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.ShortValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      // Undeclared exception!
      try { 
        shortValidator0.validate("QG7Tn", "org.apache.commons.validator.routines.ShortValidator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.ShortValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(false, 2093);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      // Undeclared exception!
      try { 
        shortValidator0.processParsedValue((Object) null, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.ShortValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      // Undeclared exception!
      try { 
        shortValidator0.processParsedValue("org.apache.commons.validator.routines.ShortValidator", numberFormat0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.ShortValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      // Undeclared exception!
      try { 
        shortValidator0.minValue((Short) null, (short) (-3029));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.ShortValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      // Undeclared exception!
      try { 
        shortValidator0.maxValue((Short) null, (short)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.ShortValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(true, 2509);
      // Undeclared exception!
      try { 
        shortValidator0.isInRange((Short) null, (short) (-1), (short) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.ShortValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.minValue((short)1250, (short) (-1749));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.maxValue((short)4262, (short)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(true, 0);
      boolean boolean0 = shortValidator0.isInRange((short)1, (short)1, (short)1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.isInRange((short) (-1115), (short)2920, (short) (-3010));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator(true, 0);
      Integer integer0 = new Integer(2147418247);
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      Object object0 = shortValidator0.processParsedValue(integer0, mockSimpleDateFormat0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      Double double0 = new Double(0);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      Object object0 = shortValidator0.processParsedValue(double0, numberFormat0);
      assertEquals((short)0, object0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Integer integer0 = new Integer((-2147425204));
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      Object object0 = shortValidator0.processParsedValue(integer0, dateFormat0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.minValue((short)0, (short)95);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      boolean boolean0 = shortValidator0.isInRange((short) (-1045), (short) (-1344), (short) (-1518));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      Short short0 = new Short((short) (-2191));
      boolean boolean0 = shortValidator0.isInRange(short0, (short)0, (short) (-2191));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Locale locale0 = Locale.ITALIAN;
      Short short0 = shortValidator0.validate("", locale0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Short short0 = new Short((short)0);
      boolean boolean0 = shortValidator0.isInRange(short0, (short)0, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Short short0 = shortValidator0.validate("M[+b<COyj", "EW~P", locale0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Short short0 = new Short((short)0);
      boolean boolean0 = shortValidator0.minValue(short0, (short)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Short short0 = shortValidator0.validate("", "");
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ShortValidator shortValidator0 = new ShortValidator();
      Short short0 = new Short((short)1);
      boolean boolean0 = shortValidator0.maxValue(short0, (short) (-436));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ShortValidator shortValidator0 = ShortValidator.getInstance();
      Short short0 = shortValidator0.validate("<y-+%Y21o!G_");
      assertNull(short0);
  }
}
